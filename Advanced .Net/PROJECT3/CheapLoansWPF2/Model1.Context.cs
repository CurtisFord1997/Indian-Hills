//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CheapLoansWPF2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CheapLoansEntities : DbContext
    {
        public CheapLoansEntities()
            : base("name=CheapLoansEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Loan> Loans { get; set; }
    
        public virtual int InsertProcedure(string custName, Nullable<decimal> loanAmount, Nullable<decimal> annualIntRate, Nullable<int> numPayments)
        {
            var custNameParameter = custName != null ?
                new ObjectParameter("CustName", custName) :
                new ObjectParameter("CustName", typeof(string));
    
            var loanAmountParameter = loanAmount.HasValue ?
                new ObjectParameter("LoanAmount", loanAmount) :
                new ObjectParameter("LoanAmount", typeof(decimal));
    
            var annualIntRateParameter = annualIntRate.HasValue ?
                new ObjectParameter("AnnualIntRate", annualIntRate) :
                new ObjectParameter("AnnualIntRate", typeof(decimal));
    
            var numPaymentsParameter = numPayments.HasValue ?
                new ObjectParameter("NumPayments", numPayments) :
                new ObjectParameter("NumPayments", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProcedure", custNameParameter, loanAmountParameter, annualIntRateParameter, numPaymentsParameter);
        }
    
        public virtual ObjectResult<StoredSelect_Result> StoredSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StoredSelect_Result>("StoredSelect");
        }
    }
}
